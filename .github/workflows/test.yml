name: Build Kernel Next-SUSFS For OPAce2
on:
  workflow_dispatch:
    inputs:
      CPU:
        description: "分支"
        required: true
        default: 'sm8475'
      FEIL:
        description: "配置文件"
        required: true
        default: 'oneplus_11r_v'
      CPUD:
        description: "处理器代号"
        required: true
        default: 'waipio'
      ANDROID_VERSION:
        description: "内核安卓版本"
        required: true
        default: 'android12'
      KERNEL_VERSION:
        description: "内核版本"
        required: true
        default: '5.10'
      KSUNEXT_ENABLED:
        description: "添加 KSU Next"
        required: true
        type: boolean
        default: false
      SUSFS_ENABLED:
        description: "添加 SUSFS"
        required: true
        type: boolean
        default: false
jobs:
  build:
    runs-on: ubuntu-latest 
    steps:
      - name: DL
        run: |
           cd kernel_workspace
           git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}
           git clone https://github.com/TheWildJames/kernel_patches.git
           cd kernel_platform
           cp ../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch ./KernelSU-Next/
           cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch ./common/
           cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
           cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/

           # Apply patches
           cd ./KernelSU-Next
           patch -p1 --forward < 10_enable_susfs_for_ksu.patch || true
           cd ../common
           patch -p1 < 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch || true
           cp ../../kernel_patches/69_hide_stuff.patch ./
           patch -p1 -F 3 < 69_hide_stuff.patch
           git add -A && git commit -a -m "BUILD Kernel"
           cd ..
           cd ./msm-kernel && git add -A && git commit -a -m "BUILD Kernel"
           cd ..
             
           cp ../kernel_patches/apk_sign.c_fix.patch ./
           patch -p1 -F 3 < apk_sign.c_fix.patch
             
           cp ../kernel_patches/core_hook.c_fix.patch ./
           patch -p1 --fuzz=3 < ./core_hook.c_fix.patch
           
           cp ../kernel_patches/selinux.c_fix.patch ./
           patch -p1 -F 3 < selinux.c_fix.patch
           
      - name: Build kernel
        run: |
         cd kernel_workspace
         ./kernel_platform/oplus/build/oplus_build_kernel.sh ${{ github.event.inputs.CPUD }} gki
         
      - name: Make AnyKernel3
        run: |
         git clone https://github.com/TanakaLun/AnyKernel3 --depth=1
         rm -rf ./AnyKernel3/.git
         cp kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-gki/dist/Image ./AnyKernel3/

      - name: Download latest susfs4ksu module
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          LATEST_URL=$(curl -sSLH "Authorization: Bearer $GH_TOKEN" \
            https://api.github.com/repos/sidex15/susfs4ksu-module/releases/latest \
            | jq -r '.assets[] | select(.name | test("ksu_module_susfs_1.5.2\\+.*\\.zip")) | .browser_download_url')
          curl -LO "$LATEST_URL"
          echo "Downloaded file: $(ls ksu_module_susfs_1.5.2+*.zip)"         
          mv ksu_module_susfs_1.5.2+.zip ./AnyKernel3/         

      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
         name: AnyKernel3_KernelSU_Next_${{ env.KSUVER }}_${{ github.event.inputs.FEIL }}
         path: ./AnyKernel3/*
         
      - name: Download Latest Release
        env:
          GH_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
        run: |
          # 获取最新版本的下载链接
          LATEST_URL=$(curl -sSLH "Authorization: Bearer $GH_TOKEN" \
            https://api.github.com/repos/sidex15/susfs4ksu-module/releases/latest \
            | jq -r '.assets[] | select(.name | test("ksu_module_susfs_1.5.2\\+.*\\.zip")) | .browser_download_url')

          # 下载文件并保留远程文件名
          curl -LO "$LATEST_URL"

          # 获取下载的文件名
          DOWNLOADED_FILE=$(basename "$LATEST_URL")

          # 检查文件是否存在
          if [ ! -f "$DOWNLOADED_FILE" ]; then
            echo "Error: File not downloaded!"
            exit 1
          fi

          # 输出文件名
          echo "Downloaded file: $DOWNLOADED_FILE"

          # 解压文件
          unzip "$DOWNLOADED_FILE" -d susfs-module
